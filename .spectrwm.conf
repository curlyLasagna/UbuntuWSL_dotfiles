# PLEASE READ THE MAN PAGE BEFORE EDITING THIS FILE!
# https://htmlpreview.github.io/?https://github.com/conformal/spectrwm/blob/master/spectrwm.html
# NOTE: all rgb color values in this file are in hex! see XQueryColor for examples

workspace_limit		= 10
focus_mode				= default
focus_close				= previous
focus_close_wrap	= 1
focus_default			= last
spawn_position		= next
workspace_clamp		= 1
warp_focus				= 1
warp_pointer			= 1

# Window Decoration
border_width						= 2
color_focus							= white
color_focus_maximized		= black
color_unfocus						= rgb:33/33/33
color_unfocus_maximized	= rgb:88/88/00
region_padding					= 2
tile_gap								= 2

# Region containment
# Distance window must be dragged/resized beyond the region edge before it is
# allowed outside the region.
boundary_width 		= 100

# Remove window border when bar is disabled and there is only one window in workspace
disable_border = 1

# Dialog box size ratio when using TRANSSZ quirk; 0.3 < dialog_ratio <= 1.0
# dialog_ratio		= 0.6

# Split a non-RandR dual head setup into one region per monitor
# (non-standard driver-based multihead is not seen by spectrwm)
# region		= screen[1]:2560x1080+0+0
# region		= screen[2]:1920x1080+0+0

# Launch applications in a workspace of choice
autorun = ws[1]:kitty
autorun = ws[1]:~/scripts/setWallpaper.sh
	
################
# Bar Settings # 
################

# Enable bar
bar_enabled	= 1				

# Enable bar in workspace [x]
bar_enabled_ws[1]	= 1				

# Bar border width
bar_border_width = 0

# Border color of the status bar(s) in screen x
bar_border[1]	= rgb:00/80/80	

# Bar background color in screen [x]
bar_color[1]= rgb:29/28/29			

# Border color ofthe status bar(s) on unfocused regions in screen x
# bar_border_unfocus[1]	= xxx		

bar_font_color[1]	= rgb:99/99/99
# bar_font			= Symbola:pixelsize=16:antialias=true
bar_font			= Terminus:pixelsize=14:antialias=true
# bar_font			= Unifont:pixelsize=14:antialias=true
# bar_font			= PragmataPro:pixelsize=12:antialias=true
# bar_font			= PragmataPro:style=Regular:pixelsize=12:antialias=true

#bar_action			= conky
# Justify bar left/center/right. Non-left may break output
bar_justify		= left
# Move bar to bottom
# bar_at_bottom	= 0				

# Enable showing stack method in bar
stack_enabled					= 0				
# Enable clock in bar. Disable to let script do date
clock_enabled					= 1				
clock_format					= %a %b %d %Y %I:%M%P
# Show active window title
title_name_enabled		= 1			

# title_class_enabled	= 1			

# Show active window classes
# window_name_enabled	= 1

# Show urgent \a screens in bar. Too Big
# urgent_enabled			= 0				

# Hides non-urgent. Makes smaller, still ~8 chars
# urgent_collapse			= 0				

#######################################
# Customize workspace layout at start #
#######################################

# layout		= ws[1]:4:0:0:0:vertical
# layout		= ws[2]:0:0:0:0:horizontal
# layout		= ws[3]:0:0:0:0:fullscreen
# layout		= ws[4]:4:0:0:0:vertical_flip
# layout		= ws[5]:0:0:0:0:horizontal_flip

###############################
# Set workspace name at start #
###############################

# name			= ws[1]:IRC
# name			= ws[2]:Email
# name			= ws[3]:Browse
# name			= ws[10]:Music

#################################################
# Windows key is Mod4, Apple key on OSX is Mod2 #
#################################################
modkey = Mod4

# This allows you to include pre-defined key bindings for your keyboard layout.
# keyboard_mapping = ~/.spectrwm_us.conf

# PROGRAMS

# Validated default programs:
program[lock]		= slock xset dpms force off
program[term]		= kitty
program[menu]		= rofi -show drun -modi drun
program[window] = rofi -show windowcd
# program[search]	= dmenu $dmenu_bottom -i -fn $bar_font -nb $bar_color -nf $bar_font_color -sb $bar_color_selected -sf $bar_font_color_selected
# program[name_workspace]	= dmenu $dmenu_bottom -p Workspace -fn $bar_font -nb $bar_color -nf $bar_font_color -sb $bar_color_selected -sf $bar_font_color_selected

# To disable validation of the above, free the respective binding(s):
# bind[]		= MOD+Shift+Delete	# disable lock
# bind[]		= MOD+Shift+Return	# disable term
# bind[]		= MOD+p			# disable menu

###################
# Program hotkeys #
###################

# Run terminal
bind[term] 					= MOD+Return 						

# Run menu
bind[menu] 					= MOD+d									

# Run rofi window selector
bind[window] 				= MOD+Tab								

# Quit wm
bind[quit]					= MOD+Shift+e						

# Restart wm
bind[restart]				= MOD+Shift+r						

bind[cycle_layout]	= MOD+space							

# Swap master and stacking areas
bind[flip_layout]		= MOD+Shift+l						

# Reset layout
bind[stack_reset]		= MOD+Shift+space				

# Shrink/Grow master area
bind[master_shrink]	= MOD+h									
bind[master_grow]		= MOD+l

# Add/Delete windows to master area
bind[master_add]		= MOD+comma							
bind[master_del]		= MOD+period

# Add/Remove columns/rows to stacking area
bind[stack_inc]			= MOD+Shift+comma
bind[stack_dec]			= MOD+Shift+period

# Move current window to master area
bind[swap_main]			= MOD+Shift+Return

# Focus next/previous in workspace
bind[focus_next]		= MOD+j 
bind[focus_prev]		= MOD+k 

# Focus on main window in workspace
bind[focus_main]		= MOD+m

# Swap next/previous window in workspace
bind[swap_next]			= MOD+Shift+j
bind[swap_prev]			= MOD+Shift+k

bind[bar_toggle]		= MOD+b
bind[bar_toggle_ws]	= MOD+Shift+b

# Delete current window in workspace
bind[wind_del]			= MOD+q

# Kill current window in workspace
bind[wind_kill]			= MOD+Shift+q

##############################
# Switching to nth workspace #
##############################

bind[ws_1]	= MOD+1
bind[ws_2]	= MOD+2
bind[ws_3]	= MOD+3
bind[ws_4]	= MOD+4
bind[ws_5]	= MOD+5
bind[ws_6]	= MOD+6
bind[ws_7]	= MOD+7
bind[ws_8]	= MOD+8
bind[ws_9]	= MOD+9
bind[ws_10]	= MOD+0

########################################
# Move current window to nth workspace #
########################################

bind[mvws_1]	= MOD+Shift+1
bind[mvws_2]	= MOD+Shift+2
bind[mvws_3]	= MOD+Shift+3
bind[mvws_4]	= MOD+Shift+4
bind[mvws_5]	= MOD+Shift+5
bind[mvws_6]	= MOD+Shift+6
bind[mvws_7]	= MOD+Shift+7
bind[mvws_8]	= MOD+Shift+8
bind[mvws_9]	= MOD+Shift+9
bind[mvws_10]	= MOD+Shift+0

################################################
# Switch to next workspace with a window in it #
################################################

bind[ws_next]	= MOD+Right
bind[ws_prev]	= MOD+Left

##########################
# Move to next workspace #
##########################

bind[ws_next_all]	= MOD+Up
bind[ws_prev_all]	= MOD+Down

####################################################
# Switch to next workspace with the current window #
####################################################

bind[ws_next_move] = MOD+a
bind[ws_prev_move] = MOD+Shift+Left

####################################
# Switch to last visited workspace #
####################################

bind[ws_prior] = MOD+Shift+Up

##################################
# Switch to next/previous region #
##################################
bind[rg_next] = MOD+Shift+Right
bind[rg_prev] = MOD+Shift+Left

################################
# Toggle version in status bar #
################################
bind[version]			 = MOD+Shift+v
bind[float_toggle] = MOD+t

###################
# Run lock screen #
###################
bind[lock] =	MOD+Shift+Delete

#################################
# Reinitialize physical screens #
#################################
bind[initscr]	= MOD+Shift+i

#############################################
# Minimize/Restore currently focused window #
#############################################
bind[iconify]					= MOD+w
bind[uniconify]				= MOD+Shift+w
bind[maximize_toggle]	= MOD+e

##############################
# Fake a middle mouse button #
##############################

#bind[button2]					= MOD+v
#bind[width_shrink]			= MOD+-
#bind[width_grow]				= MOD+=
#bind[height_shrink]		= MOD+Shift+-
#bind[height_grow]			= MOD+Shift+=

#################################
# Move a floating window a step #
#################################

# bind[move_left]				= MOD+[
# bind[move_right]			= MOD+]
# bind[move_up]					= MOD+Shift+[
# bind[mode_down]				= MOD+Shift+]

#bind[name_workspace]		= MOD+Shift+/
#bind[search_workspace]	= MOD+/
#bind[search_win]				= MOD+f

# Optional default programs that will only be validated if you override:
# program[screenshot_all]	= screenshot.sh full	# optional
# program[screenshot_wind]	= screenshot.sh window	# optional
# program[initscr]	= initscreen.sh			# optional

# EXAMPLE: Define 'firefox' action and bind to key.
# program[firefox]	= firefox http://spectrwm.org/
# bind[firefox]		= MOD+Shift+b

# QUIRKS
# Default quirks, remove with: quirk[class:name] = NONE
# quirk[MPlayer:xv]			= FLOAT + FULLSCREEN + FOCUSPREV
# quirk[OpenOffice.org 2.4:VCLSalFrame]	= FLOAT
# quirk[OpenOffice.org 3.0:VCLSalFrame]	= FLOAT
# quirk[OpenOffice.org 3.1:VCLSalFrame]	= FLOAT
# quirk[Firefox-bin:firefox-bin]		= TRANSSZ
# quirk[Firefox:Dialog]			= FLOAT
# quirk[Gimp:gimp]			= FLOAT + ANYWHERE
# quirk[XTerm:xterm]			= XTERM_FONTADJ
# quirk[xine:Xine Window]			= FLOAT + ANYWHERE
# quirk[Xitk:Xitk Combo]			= FLOAT + ANYWHERE
# quirk[xine:xine Panel]			= FLOAT + ANYWHERE
# quirk[Xitk:Xine Window]			= FLOAT + ANYWHERE
# quirk[xine:xine Video Fullscreen Window] = FULLSCREEN + FLOAT
# quirk[pcb:pcb]				= FLOAT
quirk[chatterino:chatterino] = FLOAT + ANYWHERE
